Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/assembly-descriptor-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/assembly-descriptor-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-adls-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-adls-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-avro-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-avro-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-avro-base-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-avro-base-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-azure-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-azure-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-batch-ingestion-common-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-batch-ingestion-common-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-batch-ingestion-hadoop-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-batch-ingestion-hadoop-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-batch-ingestion-spark-2.4-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-batch-ingestion-spark-2.4-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-batch-ingestion-spark-3-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-batch-ingestion-spark-3-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-batch-ingestion-spark-base-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-batch-ingestion-spark-base-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-batch-ingestion-standalone-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-batch-ingestion-standalone-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-broker-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-broker-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-clp-log-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-clp-log-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-common-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-common-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-compatibility-verifier-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-compatibility-verifier-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-compound-metrics-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-compound-metrics-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-confluent-avro-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-confluent-avro-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-confluent-json-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-confluent-json-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-confluent-protobuf-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-confluent-protobuf-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-controller-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-controller-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-core-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-core-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
***  MODIFIED CLASS: PUBLIC org.apache.pinot.core.operator.transform.function.TextMatchTransformFunction  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++  NEW FIELD: PRIVATE(+) java.lang.String _column

Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-csv-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-csv-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-dependency-verifier-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-dependency-verifier-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-distribution-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-distribution-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-dropwizard-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-dropwizard-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-flink-connector-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-flink-connector-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-gcs-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-gcs-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-hdfs-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-hdfs-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-integration-test-base-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-integration-test-base-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-integration-tests-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-integration-tests-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-java-client-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-java-client-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-jdbc-client-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-jdbc-client-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-json-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-json-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-kafka-2.0-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-kafka-2.0-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-kafka-3.0-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-kafka-3.0-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-kafka-base-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-kafka-base-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-kinesis-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-kinesis-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-minion-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-minion-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-minion-builtin-tasks-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-minion-builtin-tasks-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-orc-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-orc-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-parquet-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-parquet-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-perf-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-perf-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
***! MODIFIED CLASS: PUBLIC org.apache.pinot.perf.BenchmarkTextMatchQueriesSSQE  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	---! REMOVED FIELD: java.lang.String _query
	---! REMOVED FIELD: PUBLIC(-) STATIC(-) FINAL(-) java.lang.String MC_TEXT_MATCH_2
	---! REMOVED FIELD: PUBLIC(-) STATIC(-) FINAL(-) java.lang.String MC_TEXT_MATCH_1
	---! REMOVED FIELD: PUBLIC(-) STATIC(-) FINAL(-) java.lang.String MC_TEXT_MATCH_5
	---  REMOVED FIELD: PRIVATE(-) STATIC(-) FINAL(-) int STR_COL_COUNT
	---  REMOVED FIELD: PRIVATE(-) org.apache.pinot.perf.Distribution$DataSupplier _supplier
	---! REMOVED FIELD: PUBLIC(-) STATIC(-) FINAL(-) java.lang.String SC_TEXT_MATCH_5
	---! REMOVED FIELD: PUBLIC(-) STATIC(-) FINAL(-) java.lang.String SC_TEXT_MATCH_1
	---! REMOVED FIELD: PUBLIC(-) STATIC(-) FINAL(-) java.lang.String SC_TEXT_MATCH_2
	+++  NEW FIELD: boolean _isMultiColIdx
	+++  NEW FIELD: PRIVATE(+) STATIC(+) java.lang.ThreadLocal<org.apache.pinot.perf.Distribution$DataSupplier> _suppliers
	+++  NEW FIELD: PRIVATE(+) STATIC(+) FINAL(+) int COL_COUNT
	+++  NEW FIELD: PRIVATE(+) STATIC(+) FINAL(+) java.lang.String OR
	+++  NEW FIELD: PRIVATE(+) STATIC(+) FINAL(+) java.lang.String[] WORDS
	+++  NEW FIELD: PRIVATE(+) STATIC(+) FINAL(+) java.lang.String AND
	+++  NEW FIELD: PRIVATE(+) STATIC(+) FINAL(+) java.util.concurrent.atomic.AtomicInteger SEARCH_COUNTER
	+++  NEW FIELD: PRIVATE(+) STATIC(+) FINAL(+) java.util.List<java.lang.String[]> SEARCH_WORDS
	+++  NEW FIELD: PRIVATE(+) STATIC(+) FINAL(+) java.util.concurrent.atomic.AtomicInteger COUNTER
	---  REMOVED METHOD: PRIVATE(-) void buildSegment(java.lang.String)
		---  REMOVED EXCEPTION: java.lang.Exception
	+++  NEW METHOD: PRIVATE(+) void buildSegment(java.lang.String, org.apache.pinot.perf.Distribution$DataSupplier, int)
		+++  NEW EXCEPTION: java.lang.Exception
	---! REMOVED METHOD: STATIC(-) org.apache.pinot.perf.LazyDataGenerator createTestData(int, org.apache.pinot.perf.Distribution$DataSupplier)
	+++  NEW METHOD: STATIC(+) org.apache.pinot.perf.LazyDataGenerator createTestData(int, org.apache.pinot.perf.Distribution$DataSupplier, boolean)
	+++  NEW METHOD: PRIVATE(+) java.lang.String generateMultiColQuery(int, java.lang.String)
	+++  NEW METHOD: PRIVATE(+) java.lang.String generateQuery(int, java.lang.String)
	---! REMOVED METHOD: PUBLIC(-) org.apache.pinot.common.response.broker.BrokerResponseNative query()
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.common.response.broker.BrokerResponseNative query10MultiColAnd()
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.common.response.broker.BrokerResponseNative query10MultiColOr()
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.common.response.broker.BrokerResponseNative query1MultiCol()
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.common.response.broker.BrokerResponseNative query5MultiColAnd()
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.common.response.broker.BrokerResponseNative query5MultiColOr()
***! MODIFIED CLASS: org.apache.pinot.perf.BenchmarkTextMatchQueriesSSQE$1  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	---! REMOVED INTERFACE: org.apache.pinot.perf.LazyDataGenerator
	+++  NEW INTERFACE: java.util.concurrent.ThreadFactory
	---  REMOVED FIELD: PRIVATE(-) FINAL(-) java.util.Random _random
	---  REMOVED FIELD: PRIVATE(-) FINAL(-) java.util.function.Function<java.lang.Integer,java.lang.String> _function
	---  REMOVED FIELD: PRIVATE(-) FINAL(-) java.lang.StringBuilder _buffer
	---  REMOVED FIELD: PRIVATE(-) FINAL(-) java.util.Map<java.lang.Integer,java.lang.String> _strings
	---  REMOVED FIELD: PRIVATE(-) org.apache.pinot.perf.Distribution$DataSupplier _supplier
	---  REMOVED FIELD: PRIVATE(-) FINAL(-) char[] _dict
	---  REMOVED FIELD: PRIVATE(-) FINAL(-) int _range
	+++  NEW FIELD: PRIVATE(+) FINAL(+) java.lang.String _namePrefix
	+++  NEW FIELD: PRIVATE(+) FINAL(+) java.util.concurrent.atomic.AtomicInteger _threadNumber
	+++  NEW FIELD: PRIVATE(+) FINAL(+) java.lang.ThreadGroup _group
	---! REMOVED CONSTRUCTOR: BenchmarkTextMatchQueriesSSQE$1(org.apache.pinot.perf.Distribution$DataSupplier, int)
	+++  NEW CONSTRUCTOR: BenchmarkTextMatchQueriesSSQE$1(org.apache.pinot.perf.BenchmarkTextMatchQueriesSSQE)
	---  REMOVED METHOD: PRIVATE(-) java.lang.String getString()
	---  REMOVED METHOD: PRIVATE(-) void initStrings()
	+++  NEW METHOD: PUBLIC(+) java.lang.Thread newThread(java.lang.Runnable)
	---  REMOVED METHOD: PUBLIC(-) org.apache.pinot.spi.data.readers.GenericRow next(org.apache.pinot.spi.data.readers.GenericRow, int)
	---  REMOVED METHOD: PUBLIC(-) void rewind()
	---  REMOVED METHOD: PUBLIC(-) int size()
+++  NEW CLASS: org.apache.pinot.perf.BenchmarkTextMatchQueriesSSQE$2  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 55.0 <- n.a.
	+++  NEW INTERFACE: org.apache.pinot.perf.LazyDataGenerator
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW FIELD: PRIVATE(+) FINAL(+) java.util.Random _random
	+++  NEW FIELD: PRIVATE(+) FINAL(+) java.util.function.Function<java.lang.Integer,java.lang.String> _function
	+++  NEW FIELD: PRIVATE(+) FINAL(+) java.lang.StringBuilder _buffer
	+++  NEW FIELD: PRIVATE(+) FINAL(+) java.util.Map<java.lang.Integer,java.lang.String> _strings
	+++  NEW FIELD: PRIVATE(+) org.apache.pinot.perf.Distribution$DataSupplier _supplier
	+++  NEW FIELD: PRIVATE(+) FINAL(+) char[] _dict
	+++  NEW FIELD: PRIVATE(+) FINAL(+) int _range
	+++  NEW CONSTRUCTOR: BenchmarkTextMatchQueriesSSQE$2(org.apache.pinot.perf.Distribution$DataSupplier, int, boolean)
	+++  NEW METHOD: PRIVATE(+) java.lang.String getString()
	+++  NEW METHOD: PRIVATE(+) void initStrings()
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.spi.data.readers.GenericRow next(org.apache.pinot.spi.data.readers.GenericRow, int)
	+++  NEW METHOD: PUBLIC(+) void rewind()
	+++  NEW METHOD: PUBLIC(+) int size()
===! UNCHANGED CLASS: PUBLIC org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
===! UNCHANGED CLASS: PUBLIC org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType_B1  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
===! UNCHANGED CLASS: PUBLIC org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType_B2  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
===! UNCHANGED CLASS: PUBLIC org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType_B3  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
+++  NEW CLASS: PUBLIC(+) FINAL(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_query10MultiColAnd_jmhTest  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 55.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW FIELD: byte p160
	+++  NEW FIELD: byte p043
	+++  NEW FIELD: byte p164
	+++  NEW FIELD: byte p042
	+++  NEW FIELD: byte p163
	+++  NEW FIELD: byte p041
	+++  NEW FIELD: byte p162
	+++  NEW FIELD: byte p040
	+++  NEW FIELD: byte p161
	+++  NEW FIELD: byte p036
	+++  NEW FIELD: byte p157
	+++  NEW FIELD: byte p035
	+++  NEW FIELD: byte p156
	+++  NEW FIELD: byte p034
	+++  NEW FIELD: byte p155
	+++  NEW FIELD: byte p033
	+++  NEW FIELD: byte p154
	+++  NEW FIELD: byte p039
	+++  NEW FIELD: byte p038
	+++  NEW FIELD: byte p159
	+++  NEW FIELD: byte p037
	+++  NEW FIELD: byte p158
	+++  NEW FIELD: byte p032
	+++  NEW FIELD: byte p153
	+++  NEW FIELD: byte p031
	+++  NEW FIELD: byte p152
	+++  NEW FIELD: byte p030
	+++  NEW FIELD: byte p151
	+++  NEW FIELD: byte p150
	+++  NEW FIELD: int startRndMask
	+++  NEW FIELD: byte p025
	+++  NEW FIELD: byte p146
	+++  NEW FIELD: byte p024
	+++  NEW FIELD: byte p145
	+++  NEW FIELD: byte p023
	+++  NEW FIELD: byte p144
	+++  NEW FIELD: byte p022
	+++  NEW FIELD: byte p143
	+++  NEW FIELD: byte p029
	+++  NEW FIELD: byte p028
	+++  NEW FIELD: byte p149
	+++  NEW FIELD: byte p027
	+++  NEW FIELD: byte p148
	+++  NEW FIELD: byte p026
	+++  NEW FIELD: byte p147
	+++  NEW FIELD: byte p061
	+++  NEW FIELD: byte p182
	+++  NEW FIELD: byte p060
	+++  NEW FIELD: byte p181
	+++  NEW FIELD: byte p180
	+++  NEW FIELD: byte p065
	+++  NEW FIELD: byte p186
	+++  NEW FIELD: byte p064
	+++  NEW FIELD: byte p185
	+++  NEW FIELD: org.openjdk.jmh.infra.Blackhole blackhole
	+++  NEW FIELD: byte p063
	+++  NEW FIELD: byte p184
	+++  NEW FIELD: byte p062
	+++  NEW FIELD: byte p183
	+++  NEW FIELD: byte p058
	+++  NEW FIELD: byte p179
	+++  NEW FIELD: byte p057
	+++  NEW FIELD: byte p178
	+++  NEW FIELD: byte p056
	+++  NEW FIELD: byte p177
	+++  NEW FIELD: byte p055
	+++  NEW FIELD: byte p176
	+++  NEW FIELD: byte p059
	+++  NEW FIELD: byte p050
	+++  NEW FIELD: byte p171
	+++  NEW FIELD: byte p170
	+++  NEW FIELD: byte p054
	+++  NEW FIELD: byte p175
	+++  NEW FIELD: byte p053
	+++  NEW FIELD: byte p174
	+++  NEW FIELD: byte p052
	+++  NEW FIELD: byte p173
	+++  NEW FIELD: byte p051
	+++  NEW FIELD: byte p172
	+++  NEW FIELD: byte p047
	+++  NEW FIELD: byte p168
	+++  NEW FIELD: byte p046
	+++  NEW FIELD: byte p167
	+++  NEW FIELD: byte p045
	+++  NEW FIELD: byte p166
	+++  NEW FIELD: byte p044
	+++  NEW FIELD: byte p165
	+++  NEW FIELD: byte p049
	+++  NEW FIELD: byte p048
	+++  NEW FIELD: byte p169
	+++  NEW FIELD: byte p083
	+++  NEW FIELD: byte p082
	+++  NEW FIELD: byte p081
	+++  NEW FIELD: byte p080
	+++  NEW FIELD: byte p087
	+++  NEW FIELD: byte p086
	+++  NEW FIELD: byte p085
	+++  NEW FIELD: byte p084
	+++  NEW FIELD: byte p079
	+++  NEW FIELD: byte p078
	+++  NEW FIELD: byte p199
	+++  NEW FIELD: byte p077
	+++  NEW FIELD: byte p198
	+++  NEW FIELD: byte p072
	+++  NEW FIELD: byte p193
	+++  NEW FIELD: byte p071
	+++  NEW FIELD: byte p192
	+++  NEW FIELD: byte p070
	+++  NEW FIELD: byte p191
	+++  NEW FIELD: byte p190
	+++  NEW FIELD: byte p076
	+++  NEW FIELD: byte p197
	+++  NEW FIELD: byte p075
	+++  NEW FIELD: byte p196
	+++  NEW FIELD: byte p074
	+++  NEW FIELD: byte p195
	+++  NEW FIELD: byte p073
	+++  NEW FIELD: byte p194
	+++  NEW FIELD: byte p069
	+++  NEW FIELD: byte p068
	+++  NEW FIELD: byte p189
	+++  NEW FIELD: byte p067
	+++  NEW FIELD: byte p188
	+++  NEW FIELD: byte p066
	+++  NEW FIELD: byte p187
	+++  NEW FIELD: byte p099
	+++  NEW FIELD: byte p090
	+++  NEW FIELD: byte p094
	+++  NEW FIELD: byte p093
	+++  NEW FIELD: byte p092
	+++  NEW FIELD: byte p091
	+++  NEW FIELD: byte p098
	+++  NEW FIELD: byte p097
	+++  NEW FIELD: byte p096
	+++  NEW FIELD: byte p095
	+++  NEW FIELD: byte p089
	+++  NEW FIELD: byte p088
	+++  NEW FIELD: STATIC(+) VOLATILE(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType f_benchmarktextmatchqueriesssqe0_G
	+++  NEW FIELD: org.openjdk.jmh.infra.IterationParams iterationParams
	+++  NEW FIELD: byte p212
	+++  NEW FIELD: byte p211
	+++  NEW FIELD: byte p210
	+++  NEW FIELD: byte p216
	+++  NEW FIELD: byte p215
	+++  NEW FIELD: byte p214
	+++  NEW FIELD: byte p213
	+++  NEW FIELD: byte p219
	+++  NEW FIELD: byte p218
	+++  NEW FIELD: byte p217
	+++  NEW FIELD: org.openjdk.jmh.infra.ThreadParams threadParams
	+++  NEW FIELD: org.openjdk.jmh.infra.Control notifyControl
	+++  NEW FIELD: byte p201
	+++  NEW FIELD: byte p200
	+++  NEW FIELD: byte p205
	+++  NEW FIELD: byte p204
	+++  NEW FIELD: byte p203
	+++  NEW FIELD: byte p202
	+++  NEW FIELD: byte p209
	+++  NEW FIELD: byte p208
	+++  NEW FIELD: byte p207
	+++  NEW FIELD: byte p206
	+++  NEW FIELD: byte p120
	+++  NEW FIELD: byte p241
	+++  NEW FIELD: byte p240
	+++  NEW FIELD: byte p113
	+++  NEW FIELD: byte p234
	+++  NEW FIELD: byte p112
	+++  NEW FIELD: byte p233
	+++  NEW FIELD: byte p111
	+++  NEW FIELD: byte p232
	+++  NEW FIELD: byte p110
	+++  NEW FIELD: byte p231
	+++  NEW FIELD: byte p117
	+++  NEW FIELD: byte p238
	+++  NEW FIELD: byte p116
	+++  NEW FIELD: byte p237
	+++  NEW FIELD: byte p115
	+++  NEW FIELD: byte p236
	+++  NEW FIELD: byte p114
	+++  NEW FIELD: byte p235
	+++  NEW FIELD: byte p119
	+++  NEW FIELD: byte p118
	+++  NEW FIELD: byte p239
	+++  NEW FIELD: byte p230
	+++  NEW FIELD: byte p102
	+++  NEW FIELD: byte p223
	+++  NEW FIELD: byte p101
	+++  NEW FIELD: byte p222
	+++  NEW FIELD: byte p100
	+++  NEW FIELD: byte p221
	+++  NEW FIELD: byte p220
	+++  NEW FIELD: byte p106
	+++  NEW FIELD: byte p227
	+++  NEW FIELD: byte p105
	+++  NEW FIELD: byte p226
	+++  NEW FIELD: byte p104
	+++  NEW FIELD: byte p225
	+++  NEW FIELD: byte p103
	+++  NEW FIELD: byte p224
	+++  NEW FIELD: byte p109
	+++  NEW FIELD: byte p108
	+++  NEW FIELD: byte p229
	+++  NEW FIELD: byte p107
	+++  NEW FIELD: byte p228
	+++  NEW FIELD: org.openjdk.jmh.infra.BenchmarkParams benchmarkParams
	+++  NEW FIELD: byte p021
	+++  NEW FIELD: byte p142
	+++  NEW FIELD: byte p020
	+++  NEW FIELD: byte p141
	+++  NEW FIELD: byte p140
	+++  NEW FIELD: byte p014
	+++  NEW FIELD: byte p135
	+++  NEW FIELD: byte p013
	+++  NEW FIELD: byte p134
	+++  NEW FIELD: byte p255
	+++  NEW FIELD: byte p012
	+++  NEW FIELD: byte p133
	+++  NEW FIELD: byte p254
	+++  NEW FIELD: byte p011
	+++  NEW FIELD: byte p132
	+++  NEW FIELD: byte p253
	+++  NEW FIELD: byte p018
	+++  NEW FIELD: byte p139
	+++  NEW FIELD: byte p017
	+++  NEW FIELD: byte p138
	+++  NEW FIELD: byte p016
	+++  NEW FIELD: byte p137
	+++  NEW FIELD: byte p015
	+++  NEW FIELD: byte p136
	+++  NEW FIELD: byte p019
	+++  NEW FIELD: byte p010
	+++  NEW FIELD: byte p131
	+++  NEW FIELD: byte p252
	+++  NEW FIELD: byte p130
	+++  NEW FIELD: byte p251
	+++  NEW FIELD: byte p250
	+++  NEW FIELD: byte p003
	+++  NEW FIELD: byte p124
	+++  NEW FIELD: byte p245
	+++  NEW FIELD: byte p002
	+++  NEW FIELD: byte p123
	+++  NEW FIELD: byte p244
	+++  NEW FIELD: byte p001
	+++  NEW FIELD: byte p122
	+++  NEW FIELD: byte p243
	+++  NEW FIELD: byte p000
	+++  NEW FIELD: byte p121
	+++  NEW FIELD: byte p242
	+++  NEW FIELD: byte p007
	+++  NEW FIELD: byte p128
	+++  NEW FIELD: byte p249
	+++  NEW FIELD: byte p006
	+++  NEW FIELD: byte p127
	+++  NEW FIELD: byte p248
	+++  NEW FIELD: byte p005
	+++  NEW FIELD: byte p126
	+++  NEW FIELD: byte p247
	+++  NEW FIELD: byte p004
	+++  NEW FIELD: byte p125
	+++  NEW FIELD: byte p246
	+++  NEW FIELD: byte p009
	+++  NEW FIELD: byte p008
	+++  NEW FIELD: byte p129
	+++  NEW CONSTRUCTOR: PUBLIC(+) BenchmarkTextMatchQueriesSSQE_query10MultiColAnd_jmhTest()
	+++  NEW METHOD: org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType _jmh_tryInit_f_benchmarktextmatchqueriesssqe0_G(org.openjdk.jmh.runner.InfraControl)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query10MultiColAnd_AverageTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query10MultiColAnd_avgt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query10MultiColAnd_sample_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.openjdk.jmh.util.SampleBuffer, int, long, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query10MultiColAnd_SampleTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query10MultiColAnd_SingleShotTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query10MultiColAnd_ss_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query10MultiColAnd_Throughput(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query10MultiColAnd_thrpt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
+++  NEW CLASS: PUBLIC(+) FINAL(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_query10MultiColOr_jmhTest  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 55.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW FIELD: byte p160
	+++  NEW FIELD: byte p043
	+++  NEW FIELD: byte p164
	+++  NEW FIELD: byte p042
	+++  NEW FIELD: byte p163
	+++  NEW FIELD: byte p041
	+++  NEW FIELD: byte p162
	+++  NEW FIELD: byte p040
	+++  NEW FIELD: byte p161
	+++  NEW FIELD: byte p036
	+++  NEW FIELD: byte p157
	+++  NEW FIELD: byte p035
	+++  NEW FIELD: byte p156
	+++  NEW FIELD: byte p034
	+++  NEW FIELD: byte p155
	+++  NEW FIELD: byte p033
	+++  NEW FIELD: byte p154
	+++  NEW FIELD: byte p039
	+++  NEW FIELD: byte p038
	+++  NEW FIELD: byte p159
	+++  NEW FIELD: byte p037
	+++  NEW FIELD: byte p158
	+++  NEW FIELD: byte p032
	+++  NEW FIELD: byte p153
	+++  NEW FIELD: byte p031
	+++  NEW FIELD: byte p152
	+++  NEW FIELD: byte p030
	+++  NEW FIELD: byte p151
	+++  NEW FIELD: byte p150
	+++  NEW FIELD: int startRndMask
	+++  NEW FIELD: byte p025
	+++  NEW FIELD: byte p146
	+++  NEW FIELD: byte p024
	+++  NEW FIELD: byte p145
	+++  NEW FIELD: byte p023
	+++  NEW FIELD: byte p144
	+++  NEW FIELD: byte p022
	+++  NEW FIELD: byte p143
	+++  NEW FIELD: byte p029
	+++  NEW FIELD: byte p028
	+++  NEW FIELD: byte p149
	+++  NEW FIELD: byte p027
	+++  NEW FIELD: byte p148
	+++  NEW FIELD: byte p026
	+++  NEW FIELD: byte p147
	+++  NEW FIELD: byte p061
	+++  NEW FIELD: byte p182
	+++  NEW FIELD: byte p060
	+++  NEW FIELD: byte p181
	+++  NEW FIELD: byte p180
	+++  NEW FIELD: byte p065
	+++  NEW FIELD: byte p186
	+++  NEW FIELD: byte p064
	+++  NEW FIELD: byte p185
	+++  NEW FIELD: org.openjdk.jmh.infra.Blackhole blackhole
	+++  NEW FIELD: byte p063
	+++  NEW FIELD: byte p184
	+++  NEW FIELD: byte p062
	+++  NEW FIELD: byte p183
	+++  NEW FIELD: byte p058
	+++  NEW FIELD: byte p179
	+++  NEW FIELD: byte p057
	+++  NEW FIELD: byte p178
	+++  NEW FIELD: byte p056
	+++  NEW FIELD: byte p177
	+++  NEW FIELD: byte p055
	+++  NEW FIELD: byte p176
	+++  NEW FIELD: byte p059
	+++  NEW FIELD: byte p050
	+++  NEW FIELD: byte p171
	+++  NEW FIELD: byte p170
	+++  NEW FIELD: byte p054
	+++  NEW FIELD: byte p175
	+++  NEW FIELD: byte p053
	+++  NEW FIELD: byte p174
	+++  NEW FIELD: byte p052
	+++  NEW FIELD: byte p173
	+++  NEW FIELD: byte p051
	+++  NEW FIELD: byte p172
	+++  NEW FIELD: byte p047
	+++  NEW FIELD: byte p168
	+++  NEW FIELD: byte p046
	+++  NEW FIELD: byte p167
	+++  NEW FIELD: byte p045
	+++  NEW FIELD: byte p166
	+++  NEW FIELD: byte p044
	+++  NEW FIELD: byte p165
	+++  NEW FIELD: byte p049
	+++  NEW FIELD: byte p048
	+++  NEW FIELD: byte p169
	+++  NEW FIELD: byte p083
	+++  NEW FIELD: byte p082
	+++  NEW FIELD: byte p081
	+++  NEW FIELD: byte p080
	+++  NEW FIELD: byte p087
	+++  NEW FIELD: byte p086
	+++  NEW FIELD: byte p085
	+++  NEW FIELD: byte p084
	+++  NEW FIELD: byte p079
	+++  NEW FIELD: byte p078
	+++  NEW FIELD: byte p199
	+++  NEW FIELD: byte p077
	+++  NEW FIELD: byte p198
	+++  NEW FIELD: byte p072
	+++  NEW FIELD: byte p193
	+++  NEW FIELD: byte p071
	+++  NEW FIELD: byte p192
	+++  NEW FIELD: byte p070
	+++  NEW FIELD: byte p191
	+++  NEW FIELD: byte p190
	+++  NEW FIELD: byte p076
	+++  NEW FIELD: byte p197
	+++  NEW FIELD: byte p075
	+++  NEW FIELD: byte p196
	+++  NEW FIELD: byte p074
	+++  NEW FIELD: byte p195
	+++  NEW FIELD: byte p073
	+++  NEW FIELD: byte p194
	+++  NEW FIELD: byte p069
	+++  NEW FIELD: byte p068
	+++  NEW FIELD: byte p189
	+++  NEW FIELD: byte p067
	+++  NEW FIELD: byte p188
	+++  NEW FIELD: byte p066
	+++  NEW FIELD: byte p187
	+++  NEW FIELD: byte p099
	+++  NEW FIELD: byte p090
	+++  NEW FIELD: byte p094
	+++  NEW FIELD: byte p093
	+++  NEW FIELD: byte p092
	+++  NEW FIELD: byte p091
	+++  NEW FIELD: byte p098
	+++  NEW FIELD: byte p097
	+++  NEW FIELD: byte p096
	+++  NEW FIELD: byte p095
	+++  NEW FIELD: byte p089
	+++  NEW FIELD: byte p088
	+++  NEW FIELD: STATIC(+) VOLATILE(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType f_benchmarktextmatchqueriesssqe0_G
	+++  NEW FIELD: org.openjdk.jmh.infra.IterationParams iterationParams
	+++  NEW FIELD: byte p212
	+++  NEW FIELD: byte p211
	+++  NEW FIELD: byte p210
	+++  NEW FIELD: byte p216
	+++  NEW FIELD: byte p215
	+++  NEW FIELD: byte p214
	+++  NEW FIELD: byte p213
	+++  NEW FIELD: byte p219
	+++  NEW FIELD: byte p218
	+++  NEW FIELD: byte p217
	+++  NEW FIELD: org.openjdk.jmh.infra.ThreadParams threadParams
	+++  NEW FIELD: org.openjdk.jmh.infra.Control notifyControl
	+++  NEW FIELD: byte p201
	+++  NEW FIELD: byte p200
	+++  NEW FIELD: byte p205
	+++  NEW FIELD: byte p204
	+++  NEW FIELD: byte p203
	+++  NEW FIELD: byte p202
	+++  NEW FIELD: byte p209
	+++  NEW FIELD: byte p208
	+++  NEW FIELD: byte p207
	+++  NEW FIELD: byte p206
	+++  NEW FIELD: byte p120
	+++  NEW FIELD: byte p241
	+++  NEW FIELD: byte p240
	+++  NEW FIELD: byte p113
	+++  NEW FIELD: byte p234
	+++  NEW FIELD: byte p112
	+++  NEW FIELD: byte p233
	+++  NEW FIELD: byte p111
	+++  NEW FIELD: byte p232
	+++  NEW FIELD: byte p110
	+++  NEW FIELD: byte p231
	+++  NEW FIELD: byte p117
	+++  NEW FIELD: byte p238
	+++  NEW FIELD: byte p116
	+++  NEW FIELD: byte p237
	+++  NEW FIELD: byte p115
	+++  NEW FIELD: byte p236
	+++  NEW FIELD: byte p114
	+++  NEW FIELD: byte p235
	+++  NEW FIELD: byte p119
	+++  NEW FIELD: byte p118
	+++  NEW FIELD: byte p239
	+++  NEW FIELD: byte p230
	+++  NEW FIELD: byte p102
	+++  NEW FIELD: byte p223
	+++  NEW FIELD: byte p101
	+++  NEW FIELD: byte p222
	+++  NEW FIELD: byte p100
	+++  NEW FIELD: byte p221
	+++  NEW FIELD: byte p220
	+++  NEW FIELD: byte p106
	+++  NEW FIELD: byte p227
	+++  NEW FIELD: byte p105
	+++  NEW FIELD: byte p226
	+++  NEW FIELD: byte p104
	+++  NEW FIELD: byte p225
	+++  NEW FIELD: byte p103
	+++  NEW FIELD: byte p224
	+++  NEW FIELD: byte p109
	+++  NEW FIELD: byte p108
	+++  NEW FIELD: byte p229
	+++  NEW FIELD: byte p107
	+++  NEW FIELD: byte p228
	+++  NEW FIELD: org.openjdk.jmh.infra.BenchmarkParams benchmarkParams
	+++  NEW FIELD: byte p021
	+++  NEW FIELD: byte p142
	+++  NEW FIELD: byte p020
	+++  NEW FIELD: byte p141
	+++  NEW FIELD: byte p140
	+++  NEW FIELD: byte p014
	+++  NEW FIELD: byte p135
	+++  NEW FIELD: byte p013
	+++  NEW FIELD: byte p134
	+++  NEW FIELD: byte p255
	+++  NEW FIELD: byte p012
	+++  NEW FIELD: byte p133
	+++  NEW FIELD: byte p254
	+++  NEW FIELD: byte p011
	+++  NEW FIELD: byte p132
	+++  NEW FIELD: byte p253
	+++  NEW FIELD: byte p018
	+++  NEW FIELD: byte p139
	+++  NEW FIELD: byte p017
	+++  NEW FIELD: byte p138
	+++  NEW FIELD: byte p016
	+++  NEW FIELD: byte p137
	+++  NEW FIELD: byte p015
	+++  NEW FIELD: byte p136
	+++  NEW FIELD: byte p019
	+++  NEW FIELD: byte p010
	+++  NEW FIELD: byte p131
	+++  NEW FIELD: byte p252
	+++  NEW FIELD: byte p130
	+++  NEW FIELD: byte p251
	+++  NEW FIELD: byte p250
	+++  NEW FIELD: byte p003
	+++  NEW FIELD: byte p124
	+++  NEW FIELD: byte p245
	+++  NEW FIELD: byte p002
	+++  NEW FIELD: byte p123
	+++  NEW FIELD: byte p244
	+++  NEW FIELD: byte p001
	+++  NEW FIELD: byte p122
	+++  NEW FIELD: byte p243
	+++  NEW FIELD: byte p000
	+++  NEW FIELD: byte p121
	+++  NEW FIELD: byte p242
	+++  NEW FIELD: byte p007
	+++  NEW FIELD: byte p128
	+++  NEW FIELD: byte p249
	+++  NEW FIELD: byte p006
	+++  NEW FIELD: byte p127
	+++  NEW FIELD: byte p248
	+++  NEW FIELD: byte p005
	+++  NEW FIELD: byte p126
	+++  NEW FIELD: byte p247
	+++  NEW FIELD: byte p004
	+++  NEW FIELD: byte p125
	+++  NEW FIELD: byte p246
	+++  NEW FIELD: byte p009
	+++  NEW FIELD: byte p008
	+++  NEW FIELD: byte p129
	+++  NEW CONSTRUCTOR: PUBLIC(+) BenchmarkTextMatchQueriesSSQE_query10MultiColOr_jmhTest()
	+++  NEW METHOD: org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType _jmh_tryInit_f_benchmarktextmatchqueriesssqe0_G(org.openjdk.jmh.runner.InfraControl)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query10MultiColOr_AverageTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query10MultiColOr_avgt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query10MultiColOr_sample_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.openjdk.jmh.util.SampleBuffer, int, long, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query10MultiColOr_SampleTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query10MultiColOr_SingleShotTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query10MultiColOr_ss_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query10MultiColOr_Throughput(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query10MultiColOr_thrpt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
+++  NEW CLASS: PUBLIC(+) FINAL(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_query1MultiCol_jmhTest  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 55.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW FIELD: byte p160
	+++  NEW FIELD: byte p043
	+++  NEW FIELD: byte p164
	+++  NEW FIELD: byte p042
	+++  NEW FIELD: byte p163
	+++  NEW FIELD: byte p041
	+++  NEW FIELD: byte p162
	+++  NEW FIELD: byte p040
	+++  NEW FIELD: byte p161
	+++  NEW FIELD: byte p036
	+++  NEW FIELD: byte p157
	+++  NEW FIELD: byte p035
	+++  NEW FIELD: byte p156
	+++  NEW FIELD: byte p034
	+++  NEW FIELD: byte p155
	+++  NEW FIELD: byte p033
	+++  NEW FIELD: byte p154
	+++  NEW FIELD: byte p039
	+++  NEW FIELD: byte p038
	+++  NEW FIELD: byte p159
	+++  NEW FIELD: byte p037
	+++  NEW FIELD: byte p158
	+++  NEW FIELD: byte p032
	+++  NEW FIELD: byte p153
	+++  NEW FIELD: byte p031
	+++  NEW FIELD: byte p152
	+++  NEW FIELD: byte p030
	+++  NEW FIELD: byte p151
	+++  NEW FIELD: byte p150
	+++  NEW FIELD: int startRndMask
	+++  NEW FIELD: byte p025
	+++  NEW FIELD: byte p146
	+++  NEW FIELD: byte p024
	+++  NEW FIELD: byte p145
	+++  NEW FIELD: byte p023
	+++  NEW FIELD: byte p144
	+++  NEW FIELD: byte p022
	+++  NEW FIELD: byte p143
	+++  NEW FIELD: byte p029
	+++  NEW FIELD: byte p028
	+++  NEW FIELD: byte p149
	+++  NEW FIELD: byte p027
	+++  NEW FIELD: byte p148
	+++  NEW FIELD: byte p026
	+++  NEW FIELD: byte p147
	+++  NEW FIELD: byte p061
	+++  NEW FIELD: byte p182
	+++  NEW FIELD: byte p060
	+++  NEW FIELD: byte p181
	+++  NEW FIELD: byte p180
	+++  NEW FIELD: byte p065
	+++  NEW FIELD: byte p186
	+++  NEW FIELD: byte p064
	+++  NEW FIELD: byte p185
	+++  NEW FIELD: org.openjdk.jmh.infra.Blackhole blackhole
	+++  NEW FIELD: byte p063
	+++  NEW FIELD: byte p184
	+++  NEW FIELD: byte p062
	+++  NEW FIELD: byte p183
	+++  NEW FIELD: byte p058
	+++  NEW FIELD: byte p179
	+++  NEW FIELD: byte p057
	+++  NEW FIELD: byte p178
	+++  NEW FIELD: byte p056
	+++  NEW FIELD: byte p177
	+++  NEW FIELD: byte p055
	+++  NEW FIELD: byte p176
	+++  NEW FIELD: byte p059
	+++  NEW FIELD: byte p050
	+++  NEW FIELD: byte p171
	+++  NEW FIELD: byte p170
	+++  NEW FIELD: byte p054
	+++  NEW FIELD: byte p175
	+++  NEW FIELD: byte p053
	+++  NEW FIELD: byte p174
	+++  NEW FIELD: byte p052
	+++  NEW FIELD: byte p173
	+++  NEW FIELD: byte p051
	+++  NEW FIELD: byte p172
	+++  NEW FIELD: byte p047
	+++  NEW FIELD: byte p168
	+++  NEW FIELD: byte p046
	+++  NEW FIELD: byte p167
	+++  NEW FIELD: byte p045
	+++  NEW FIELD: byte p166
	+++  NEW FIELD: byte p044
	+++  NEW FIELD: byte p165
	+++  NEW FIELD: byte p049
	+++  NEW FIELD: byte p048
	+++  NEW FIELD: byte p169
	+++  NEW FIELD: byte p083
	+++  NEW FIELD: byte p082
	+++  NEW FIELD: byte p081
	+++  NEW FIELD: byte p080
	+++  NEW FIELD: byte p087
	+++  NEW FIELD: byte p086
	+++  NEW FIELD: byte p085
	+++  NEW FIELD: byte p084
	+++  NEW FIELD: byte p079
	+++  NEW FIELD: byte p078
	+++  NEW FIELD: byte p199
	+++  NEW FIELD: byte p077
	+++  NEW FIELD: byte p198
	+++  NEW FIELD: byte p072
	+++  NEW FIELD: byte p193
	+++  NEW FIELD: byte p071
	+++  NEW FIELD: byte p192
	+++  NEW FIELD: byte p070
	+++  NEW FIELD: byte p191
	+++  NEW FIELD: byte p190
	+++  NEW FIELD: byte p076
	+++  NEW FIELD: byte p197
	+++  NEW FIELD: byte p075
	+++  NEW FIELD: byte p196
	+++  NEW FIELD: byte p074
	+++  NEW FIELD: byte p195
	+++  NEW FIELD: byte p073
	+++  NEW FIELD: byte p194
	+++  NEW FIELD: byte p069
	+++  NEW FIELD: byte p068
	+++  NEW FIELD: byte p189
	+++  NEW FIELD: byte p067
	+++  NEW FIELD: byte p188
	+++  NEW FIELD: byte p066
	+++  NEW FIELD: byte p187
	+++  NEW FIELD: byte p099
	+++  NEW FIELD: byte p090
	+++  NEW FIELD: byte p094
	+++  NEW FIELD: byte p093
	+++  NEW FIELD: byte p092
	+++  NEW FIELD: byte p091
	+++  NEW FIELD: byte p098
	+++  NEW FIELD: byte p097
	+++  NEW FIELD: byte p096
	+++  NEW FIELD: byte p095
	+++  NEW FIELD: byte p089
	+++  NEW FIELD: byte p088
	+++  NEW FIELD: STATIC(+) VOLATILE(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType f_benchmarktextmatchqueriesssqe0_G
	+++  NEW FIELD: org.openjdk.jmh.infra.IterationParams iterationParams
	+++  NEW FIELD: byte p212
	+++  NEW FIELD: byte p211
	+++  NEW FIELD: byte p210
	+++  NEW FIELD: byte p216
	+++  NEW FIELD: byte p215
	+++  NEW FIELD: byte p214
	+++  NEW FIELD: byte p213
	+++  NEW FIELD: byte p219
	+++  NEW FIELD: byte p218
	+++  NEW FIELD: byte p217
	+++  NEW FIELD: org.openjdk.jmh.infra.ThreadParams threadParams
	+++  NEW FIELD: org.openjdk.jmh.infra.Control notifyControl
	+++  NEW FIELD: byte p201
	+++  NEW FIELD: byte p200
	+++  NEW FIELD: byte p205
	+++  NEW FIELD: byte p204
	+++  NEW FIELD: byte p203
	+++  NEW FIELD: byte p202
	+++  NEW FIELD: byte p209
	+++  NEW FIELD: byte p208
	+++  NEW FIELD: byte p207
	+++  NEW FIELD: byte p206
	+++  NEW FIELD: byte p120
	+++  NEW FIELD: byte p241
	+++  NEW FIELD: byte p240
	+++  NEW FIELD: byte p113
	+++  NEW FIELD: byte p234
	+++  NEW FIELD: byte p112
	+++  NEW FIELD: byte p233
	+++  NEW FIELD: byte p111
	+++  NEW FIELD: byte p232
	+++  NEW FIELD: byte p110
	+++  NEW FIELD: byte p231
	+++  NEW FIELD: byte p117
	+++  NEW FIELD: byte p238
	+++  NEW FIELD: byte p116
	+++  NEW FIELD: byte p237
	+++  NEW FIELD: byte p115
	+++  NEW FIELD: byte p236
	+++  NEW FIELD: byte p114
	+++  NEW FIELD: byte p235
	+++  NEW FIELD: byte p119
	+++  NEW FIELD: byte p118
	+++  NEW FIELD: byte p239
	+++  NEW FIELD: byte p230
	+++  NEW FIELD: byte p102
	+++  NEW FIELD: byte p223
	+++  NEW FIELD: byte p101
	+++  NEW FIELD: byte p222
	+++  NEW FIELD: byte p100
	+++  NEW FIELD: byte p221
	+++  NEW FIELD: byte p220
	+++  NEW FIELD: byte p106
	+++  NEW FIELD: byte p227
	+++  NEW FIELD: byte p105
	+++  NEW FIELD: byte p226
	+++  NEW FIELD: byte p104
	+++  NEW FIELD: byte p225
	+++  NEW FIELD: byte p103
	+++  NEW FIELD: byte p224
	+++  NEW FIELD: byte p109
	+++  NEW FIELD: byte p108
	+++  NEW FIELD: byte p229
	+++  NEW FIELD: byte p107
	+++  NEW FIELD: byte p228
	+++  NEW FIELD: org.openjdk.jmh.infra.BenchmarkParams benchmarkParams
	+++  NEW FIELD: byte p021
	+++  NEW FIELD: byte p142
	+++  NEW FIELD: byte p020
	+++  NEW FIELD: byte p141
	+++  NEW FIELD: byte p140
	+++  NEW FIELD: byte p014
	+++  NEW FIELD: byte p135
	+++  NEW FIELD: byte p013
	+++  NEW FIELD: byte p134
	+++  NEW FIELD: byte p255
	+++  NEW FIELD: byte p012
	+++  NEW FIELD: byte p133
	+++  NEW FIELD: byte p254
	+++  NEW FIELD: byte p011
	+++  NEW FIELD: byte p132
	+++  NEW FIELD: byte p253
	+++  NEW FIELD: byte p018
	+++  NEW FIELD: byte p139
	+++  NEW FIELD: byte p017
	+++  NEW FIELD: byte p138
	+++  NEW FIELD: byte p016
	+++  NEW FIELD: byte p137
	+++  NEW FIELD: byte p015
	+++  NEW FIELD: byte p136
	+++  NEW FIELD: byte p019
	+++  NEW FIELD: byte p010
	+++  NEW FIELD: byte p131
	+++  NEW FIELD: byte p252
	+++  NEW FIELD: byte p130
	+++  NEW FIELD: byte p251
	+++  NEW FIELD: byte p250
	+++  NEW FIELD: byte p003
	+++  NEW FIELD: byte p124
	+++  NEW FIELD: byte p245
	+++  NEW FIELD: byte p002
	+++  NEW FIELD: byte p123
	+++  NEW FIELD: byte p244
	+++  NEW FIELD: byte p001
	+++  NEW FIELD: byte p122
	+++  NEW FIELD: byte p243
	+++  NEW FIELD: byte p000
	+++  NEW FIELD: byte p121
	+++  NEW FIELD: byte p242
	+++  NEW FIELD: byte p007
	+++  NEW FIELD: byte p128
	+++  NEW FIELD: byte p249
	+++  NEW FIELD: byte p006
	+++  NEW FIELD: byte p127
	+++  NEW FIELD: byte p248
	+++  NEW FIELD: byte p005
	+++  NEW FIELD: byte p126
	+++  NEW FIELD: byte p247
	+++  NEW FIELD: byte p004
	+++  NEW FIELD: byte p125
	+++  NEW FIELD: byte p246
	+++  NEW FIELD: byte p009
	+++  NEW FIELD: byte p008
	+++  NEW FIELD: byte p129
	+++  NEW CONSTRUCTOR: PUBLIC(+) BenchmarkTextMatchQueriesSSQE_query1MultiCol_jmhTest()
	+++  NEW METHOD: org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType _jmh_tryInit_f_benchmarktextmatchqueriesssqe0_G(org.openjdk.jmh.runner.InfraControl)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query1MultiCol_AverageTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query1MultiCol_avgt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query1MultiCol_sample_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.openjdk.jmh.util.SampleBuffer, int, long, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query1MultiCol_SampleTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query1MultiCol_SingleShotTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query1MultiCol_ss_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query1MultiCol_Throughput(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query1MultiCol_thrpt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
+++  NEW CLASS: PUBLIC(+) FINAL(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_query5MultiColAnd_jmhTest  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 55.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW FIELD: byte p160
	+++  NEW FIELD: byte p043
	+++  NEW FIELD: byte p164
	+++  NEW FIELD: byte p042
	+++  NEW FIELD: byte p163
	+++  NEW FIELD: byte p041
	+++  NEW FIELD: byte p162
	+++  NEW FIELD: byte p040
	+++  NEW FIELD: byte p161
	+++  NEW FIELD: byte p036
	+++  NEW FIELD: byte p157
	+++  NEW FIELD: byte p035
	+++  NEW FIELD: byte p156
	+++  NEW FIELD: byte p034
	+++  NEW FIELD: byte p155
	+++  NEW FIELD: byte p033
	+++  NEW FIELD: byte p154
	+++  NEW FIELD: byte p039
	+++  NEW FIELD: byte p038
	+++  NEW FIELD: byte p159
	+++  NEW FIELD: byte p037
	+++  NEW FIELD: byte p158
	+++  NEW FIELD: byte p032
	+++  NEW FIELD: byte p153
	+++  NEW FIELD: byte p031
	+++  NEW FIELD: byte p152
	+++  NEW FIELD: byte p030
	+++  NEW FIELD: byte p151
	+++  NEW FIELD: byte p150
	+++  NEW FIELD: int startRndMask
	+++  NEW FIELD: byte p025
	+++  NEW FIELD: byte p146
	+++  NEW FIELD: byte p024
	+++  NEW FIELD: byte p145
	+++  NEW FIELD: byte p023
	+++  NEW FIELD: byte p144
	+++  NEW FIELD: byte p022
	+++  NEW FIELD: byte p143
	+++  NEW FIELD: byte p029
	+++  NEW FIELD: byte p028
	+++  NEW FIELD: byte p149
	+++  NEW FIELD: byte p027
	+++  NEW FIELD: byte p148
	+++  NEW FIELD: byte p026
	+++  NEW FIELD: byte p147
	+++  NEW FIELD: byte p061
	+++  NEW FIELD: byte p182
	+++  NEW FIELD: byte p060
	+++  NEW FIELD: byte p181
	+++  NEW FIELD: byte p180
	+++  NEW FIELD: byte p065
	+++  NEW FIELD: byte p186
	+++  NEW FIELD: byte p064
	+++  NEW FIELD: byte p185
	+++  NEW FIELD: org.openjdk.jmh.infra.Blackhole blackhole
	+++  NEW FIELD: byte p063
	+++  NEW FIELD: byte p184
	+++  NEW FIELD: byte p062
	+++  NEW FIELD: byte p183
	+++  NEW FIELD: byte p058
	+++  NEW FIELD: byte p179
	+++  NEW FIELD: byte p057
	+++  NEW FIELD: byte p178
	+++  NEW FIELD: byte p056
	+++  NEW FIELD: byte p177
	+++  NEW FIELD: byte p055
	+++  NEW FIELD: byte p176
	+++  NEW FIELD: byte p059
	+++  NEW FIELD: byte p050
	+++  NEW FIELD: byte p171
	+++  NEW FIELD: byte p170
	+++  NEW FIELD: byte p054
	+++  NEW FIELD: byte p175
	+++  NEW FIELD: byte p053
	+++  NEW FIELD: byte p174
	+++  NEW FIELD: byte p052
	+++  NEW FIELD: byte p173
	+++  NEW FIELD: byte p051
	+++  NEW FIELD: byte p172
	+++  NEW FIELD: byte p047
	+++  NEW FIELD: byte p168
	+++  NEW FIELD: byte p046
	+++  NEW FIELD: byte p167
	+++  NEW FIELD: byte p045
	+++  NEW FIELD: byte p166
	+++  NEW FIELD: byte p044
	+++  NEW FIELD: byte p165
	+++  NEW FIELD: byte p049
	+++  NEW FIELD: byte p048
	+++  NEW FIELD: byte p169
	+++  NEW FIELD: byte p083
	+++  NEW FIELD: byte p082
	+++  NEW FIELD: byte p081
	+++  NEW FIELD: byte p080
	+++  NEW FIELD: byte p087
	+++  NEW FIELD: byte p086
	+++  NEW FIELD: byte p085
	+++  NEW FIELD: byte p084
	+++  NEW FIELD: byte p079
	+++  NEW FIELD: byte p078
	+++  NEW FIELD: byte p199
	+++  NEW FIELD: byte p077
	+++  NEW FIELD: byte p198
	+++  NEW FIELD: byte p072
	+++  NEW FIELD: byte p193
	+++  NEW FIELD: byte p071
	+++  NEW FIELD: byte p192
	+++  NEW FIELD: byte p070
	+++  NEW FIELD: byte p191
	+++  NEW FIELD: byte p190
	+++  NEW FIELD: byte p076
	+++  NEW FIELD: byte p197
	+++  NEW FIELD: byte p075
	+++  NEW FIELD: byte p196
	+++  NEW FIELD: byte p074
	+++  NEW FIELD: byte p195
	+++  NEW FIELD: byte p073
	+++  NEW FIELD: byte p194
	+++  NEW FIELD: byte p069
	+++  NEW FIELD: byte p068
	+++  NEW FIELD: byte p189
	+++  NEW FIELD: byte p067
	+++  NEW FIELD: byte p188
	+++  NEW FIELD: byte p066
	+++  NEW FIELD: byte p187
	+++  NEW FIELD: byte p099
	+++  NEW FIELD: byte p090
	+++  NEW FIELD: byte p094
	+++  NEW FIELD: byte p093
	+++  NEW FIELD: byte p092
	+++  NEW FIELD: byte p091
	+++  NEW FIELD: byte p098
	+++  NEW FIELD: byte p097
	+++  NEW FIELD: byte p096
	+++  NEW FIELD: byte p095
	+++  NEW FIELD: byte p089
	+++  NEW FIELD: byte p088
	+++  NEW FIELD: STATIC(+) VOLATILE(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType f_benchmarktextmatchqueriesssqe0_G
	+++  NEW FIELD: org.openjdk.jmh.infra.IterationParams iterationParams
	+++  NEW FIELD: byte p212
	+++  NEW FIELD: byte p211
	+++  NEW FIELD: byte p210
	+++  NEW FIELD: byte p216
	+++  NEW FIELD: byte p215
	+++  NEW FIELD: byte p214
	+++  NEW FIELD: byte p213
	+++  NEW FIELD: byte p219
	+++  NEW FIELD: byte p218
	+++  NEW FIELD: byte p217
	+++  NEW FIELD: org.openjdk.jmh.infra.ThreadParams threadParams
	+++  NEW FIELD: org.openjdk.jmh.infra.Control notifyControl
	+++  NEW FIELD: byte p201
	+++  NEW FIELD: byte p200
	+++  NEW FIELD: byte p205
	+++  NEW FIELD: byte p204
	+++  NEW FIELD: byte p203
	+++  NEW FIELD: byte p202
	+++  NEW FIELD: byte p209
	+++  NEW FIELD: byte p208
	+++  NEW FIELD: byte p207
	+++  NEW FIELD: byte p206
	+++  NEW FIELD: byte p120
	+++  NEW FIELD: byte p241
	+++  NEW FIELD: byte p240
	+++  NEW FIELD: byte p113
	+++  NEW FIELD: byte p234
	+++  NEW FIELD: byte p112
	+++  NEW FIELD: byte p233
	+++  NEW FIELD: byte p111
	+++  NEW FIELD: byte p232
	+++  NEW FIELD: byte p110
	+++  NEW FIELD: byte p231
	+++  NEW FIELD: byte p117
	+++  NEW FIELD: byte p238
	+++  NEW FIELD: byte p116
	+++  NEW FIELD: byte p237
	+++  NEW FIELD: byte p115
	+++  NEW FIELD: byte p236
	+++  NEW FIELD: byte p114
	+++  NEW FIELD: byte p235
	+++  NEW FIELD: byte p119
	+++  NEW FIELD: byte p118
	+++  NEW FIELD: byte p239
	+++  NEW FIELD: byte p230
	+++  NEW FIELD: byte p102
	+++  NEW FIELD: byte p223
	+++  NEW FIELD: byte p101
	+++  NEW FIELD: byte p222
	+++  NEW FIELD: byte p100
	+++  NEW FIELD: byte p221
	+++  NEW FIELD: byte p220
	+++  NEW FIELD: byte p106
	+++  NEW FIELD: byte p227
	+++  NEW FIELD: byte p105
	+++  NEW FIELD: byte p226
	+++  NEW FIELD: byte p104
	+++  NEW FIELD: byte p225
	+++  NEW FIELD: byte p103
	+++  NEW FIELD: byte p224
	+++  NEW FIELD: byte p109
	+++  NEW FIELD: byte p108
	+++  NEW FIELD: byte p229
	+++  NEW FIELD: byte p107
	+++  NEW FIELD: byte p228
	+++  NEW FIELD: org.openjdk.jmh.infra.BenchmarkParams benchmarkParams
	+++  NEW FIELD: byte p021
	+++  NEW FIELD: byte p142
	+++  NEW FIELD: byte p020
	+++  NEW FIELD: byte p141
	+++  NEW FIELD: byte p140
	+++  NEW FIELD: byte p014
	+++  NEW FIELD: byte p135
	+++  NEW FIELD: byte p013
	+++  NEW FIELD: byte p134
	+++  NEW FIELD: byte p255
	+++  NEW FIELD: byte p012
	+++  NEW FIELD: byte p133
	+++  NEW FIELD: byte p254
	+++  NEW FIELD: byte p011
	+++  NEW FIELD: byte p132
	+++  NEW FIELD: byte p253
	+++  NEW FIELD: byte p018
	+++  NEW FIELD: byte p139
	+++  NEW FIELD: byte p017
	+++  NEW FIELD: byte p138
	+++  NEW FIELD: byte p016
	+++  NEW FIELD: byte p137
	+++  NEW FIELD: byte p015
	+++  NEW FIELD: byte p136
	+++  NEW FIELD: byte p019
	+++  NEW FIELD: byte p010
	+++  NEW FIELD: byte p131
	+++  NEW FIELD: byte p252
	+++  NEW FIELD: byte p130
	+++  NEW FIELD: byte p251
	+++  NEW FIELD: byte p250
	+++  NEW FIELD: byte p003
	+++  NEW FIELD: byte p124
	+++  NEW FIELD: byte p245
	+++  NEW FIELD: byte p002
	+++  NEW FIELD: byte p123
	+++  NEW FIELD: byte p244
	+++  NEW FIELD: byte p001
	+++  NEW FIELD: byte p122
	+++  NEW FIELD: byte p243
	+++  NEW FIELD: byte p000
	+++  NEW FIELD: byte p121
	+++  NEW FIELD: byte p242
	+++  NEW FIELD: byte p007
	+++  NEW FIELD: byte p128
	+++  NEW FIELD: byte p249
	+++  NEW FIELD: byte p006
	+++  NEW FIELD: byte p127
	+++  NEW FIELD: byte p248
	+++  NEW FIELD: byte p005
	+++  NEW FIELD: byte p126
	+++  NEW FIELD: byte p247
	+++  NEW FIELD: byte p004
	+++  NEW FIELD: byte p125
	+++  NEW FIELD: byte p246
	+++  NEW FIELD: byte p009
	+++  NEW FIELD: byte p008
	+++  NEW FIELD: byte p129
	+++  NEW CONSTRUCTOR: PUBLIC(+) BenchmarkTextMatchQueriesSSQE_query5MultiColAnd_jmhTest()
	+++  NEW METHOD: org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType _jmh_tryInit_f_benchmarktextmatchqueriesssqe0_G(org.openjdk.jmh.runner.InfraControl)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query5MultiColAnd_AverageTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query5MultiColAnd_avgt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query5MultiColAnd_sample_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.openjdk.jmh.util.SampleBuffer, int, long, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query5MultiColAnd_SampleTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query5MultiColAnd_SingleShotTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query5MultiColAnd_ss_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query5MultiColAnd_Throughput(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query5MultiColAnd_thrpt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
+++  NEW CLASS: PUBLIC(+) FINAL(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_query5MultiColOr_jmhTest  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 55.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW FIELD: byte p160
	+++  NEW FIELD: byte p043
	+++  NEW FIELD: byte p164
	+++  NEW FIELD: byte p042
	+++  NEW FIELD: byte p163
	+++  NEW FIELD: byte p041
	+++  NEW FIELD: byte p162
	+++  NEW FIELD: byte p040
	+++  NEW FIELD: byte p161
	+++  NEW FIELD: byte p036
	+++  NEW FIELD: byte p157
	+++  NEW FIELD: byte p035
	+++  NEW FIELD: byte p156
	+++  NEW FIELD: byte p034
	+++  NEW FIELD: byte p155
	+++  NEW FIELD: byte p033
	+++  NEW FIELD: byte p154
	+++  NEW FIELD: byte p039
	+++  NEW FIELD: byte p038
	+++  NEW FIELD: byte p159
	+++  NEW FIELD: byte p037
	+++  NEW FIELD: byte p158
	+++  NEW FIELD: byte p032
	+++  NEW FIELD: byte p153
	+++  NEW FIELD: byte p031
	+++  NEW FIELD: byte p152
	+++  NEW FIELD: byte p030
	+++  NEW FIELD: byte p151
	+++  NEW FIELD: byte p150
	+++  NEW FIELD: int startRndMask
	+++  NEW FIELD: byte p025
	+++  NEW FIELD: byte p146
	+++  NEW FIELD: byte p024
	+++  NEW FIELD: byte p145
	+++  NEW FIELD: byte p023
	+++  NEW FIELD: byte p144
	+++  NEW FIELD: byte p022
	+++  NEW FIELD: byte p143
	+++  NEW FIELD: byte p029
	+++  NEW FIELD: byte p028
	+++  NEW FIELD: byte p149
	+++  NEW FIELD: byte p027
	+++  NEW FIELD: byte p148
	+++  NEW FIELD: byte p026
	+++  NEW FIELD: byte p147
	+++  NEW FIELD: byte p061
	+++  NEW FIELD: byte p182
	+++  NEW FIELD: byte p060
	+++  NEW FIELD: byte p181
	+++  NEW FIELD: byte p180
	+++  NEW FIELD: byte p065
	+++  NEW FIELD: byte p186
	+++  NEW FIELD: byte p064
	+++  NEW FIELD: byte p185
	+++  NEW FIELD: org.openjdk.jmh.infra.Blackhole blackhole
	+++  NEW FIELD: byte p063
	+++  NEW FIELD: byte p184
	+++  NEW FIELD: byte p062
	+++  NEW FIELD: byte p183
	+++  NEW FIELD: byte p058
	+++  NEW FIELD: byte p179
	+++  NEW FIELD: byte p057
	+++  NEW FIELD: byte p178
	+++  NEW FIELD: byte p056
	+++  NEW FIELD: byte p177
	+++  NEW FIELD: byte p055
	+++  NEW FIELD: byte p176
	+++  NEW FIELD: byte p059
	+++  NEW FIELD: byte p050
	+++  NEW FIELD: byte p171
	+++  NEW FIELD: byte p170
	+++  NEW FIELD: byte p054
	+++  NEW FIELD: byte p175
	+++  NEW FIELD: byte p053
	+++  NEW FIELD: byte p174
	+++  NEW FIELD: byte p052
	+++  NEW FIELD: byte p173
	+++  NEW FIELD: byte p051
	+++  NEW FIELD: byte p172
	+++  NEW FIELD: byte p047
	+++  NEW FIELD: byte p168
	+++  NEW FIELD: byte p046
	+++  NEW FIELD: byte p167
	+++  NEW FIELD: byte p045
	+++  NEW FIELD: byte p166
	+++  NEW FIELD: byte p044
	+++  NEW FIELD: byte p165
	+++  NEW FIELD: byte p049
	+++  NEW FIELD: byte p048
	+++  NEW FIELD: byte p169
	+++  NEW FIELD: byte p083
	+++  NEW FIELD: byte p082
	+++  NEW FIELD: byte p081
	+++  NEW FIELD: byte p080
	+++  NEW FIELD: byte p087
	+++  NEW FIELD: byte p086
	+++  NEW FIELD: byte p085
	+++  NEW FIELD: byte p084
	+++  NEW FIELD: byte p079
	+++  NEW FIELD: byte p078
	+++  NEW FIELD: byte p199
	+++  NEW FIELD: byte p077
	+++  NEW FIELD: byte p198
	+++  NEW FIELD: byte p072
	+++  NEW FIELD: byte p193
	+++  NEW FIELD: byte p071
	+++  NEW FIELD: byte p192
	+++  NEW FIELD: byte p070
	+++  NEW FIELD: byte p191
	+++  NEW FIELD: byte p190
	+++  NEW FIELD: byte p076
	+++  NEW FIELD: byte p197
	+++  NEW FIELD: byte p075
	+++  NEW FIELD: byte p196
	+++  NEW FIELD: byte p074
	+++  NEW FIELD: byte p195
	+++  NEW FIELD: byte p073
	+++  NEW FIELD: byte p194
	+++  NEW FIELD: byte p069
	+++  NEW FIELD: byte p068
	+++  NEW FIELD: byte p189
	+++  NEW FIELD: byte p067
	+++  NEW FIELD: byte p188
	+++  NEW FIELD: byte p066
	+++  NEW FIELD: byte p187
	+++  NEW FIELD: byte p099
	+++  NEW FIELD: byte p090
	+++  NEW FIELD: byte p094
	+++  NEW FIELD: byte p093
	+++  NEW FIELD: byte p092
	+++  NEW FIELD: byte p091
	+++  NEW FIELD: byte p098
	+++  NEW FIELD: byte p097
	+++  NEW FIELD: byte p096
	+++  NEW FIELD: byte p095
	+++  NEW FIELD: byte p089
	+++  NEW FIELD: byte p088
	+++  NEW FIELD: STATIC(+) VOLATILE(+) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType f_benchmarktextmatchqueriesssqe0_G
	+++  NEW FIELD: org.openjdk.jmh.infra.IterationParams iterationParams
	+++  NEW FIELD: byte p212
	+++  NEW FIELD: byte p211
	+++  NEW FIELD: byte p210
	+++  NEW FIELD: byte p216
	+++  NEW FIELD: byte p215
	+++  NEW FIELD: byte p214
	+++  NEW FIELD: byte p213
	+++  NEW FIELD: byte p219
	+++  NEW FIELD: byte p218
	+++  NEW FIELD: byte p217
	+++  NEW FIELD: org.openjdk.jmh.infra.ThreadParams threadParams
	+++  NEW FIELD: org.openjdk.jmh.infra.Control notifyControl
	+++  NEW FIELD: byte p201
	+++  NEW FIELD: byte p200
	+++  NEW FIELD: byte p205
	+++  NEW FIELD: byte p204
	+++  NEW FIELD: byte p203
	+++  NEW FIELD: byte p202
	+++  NEW FIELD: byte p209
	+++  NEW FIELD: byte p208
	+++  NEW FIELD: byte p207
	+++  NEW FIELD: byte p206
	+++  NEW FIELD: byte p120
	+++  NEW FIELD: byte p241
	+++  NEW FIELD: byte p240
	+++  NEW FIELD: byte p113
	+++  NEW FIELD: byte p234
	+++  NEW FIELD: byte p112
	+++  NEW FIELD: byte p233
	+++  NEW FIELD: byte p111
	+++  NEW FIELD: byte p232
	+++  NEW FIELD: byte p110
	+++  NEW FIELD: byte p231
	+++  NEW FIELD: byte p117
	+++  NEW FIELD: byte p238
	+++  NEW FIELD: byte p116
	+++  NEW FIELD: byte p237
	+++  NEW FIELD: byte p115
	+++  NEW FIELD: byte p236
	+++  NEW FIELD: byte p114
	+++  NEW FIELD: byte p235
	+++  NEW FIELD: byte p119
	+++  NEW FIELD: byte p118
	+++  NEW FIELD: byte p239
	+++  NEW FIELD: byte p230
	+++  NEW FIELD: byte p102
	+++  NEW FIELD: byte p223
	+++  NEW FIELD: byte p101
	+++  NEW FIELD: byte p222
	+++  NEW FIELD: byte p100
	+++  NEW FIELD: byte p221
	+++  NEW FIELD: byte p220
	+++  NEW FIELD: byte p106
	+++  NEW FIELD: byte p227
	+++  NEW FIELD: byte p105
	+++  NEW FIELD: byte p226
	+++  NEW FIELD: byte p104
	+++  NEW FIELD: byte p225
	+++  NEW FIELD: byte p103
	+++  NEW FIELD: byte p224
	+++  NEW FIELD: byte p109
	+++  NEW FIELD: byte p108
	+++  NEW FIELD: byte p229
	+++  NEW FIELD: byte p107
	+++  NEW FIELD: byte p228
	+++  NEW FIELD: org.openjdk.jmh.infra.BenchmarkParams benchmarkParams
	+++  NEW FIELD: byte p021
	+++  NEW FIELD: byte p142
	+++  NEW FIELD: byte p020
	+++  NEW FIELD: byte p141
	+++  NEW FIELD: byte p140
	+++  NEW FIELD: byte p014
	+++  NEW FIELD: byte p135
	+++  NEW FIELD: byte p013
	+++  NEW FIELD: byte p134
	+++  NEW FIELD: byte p255
	+++  NEW FIELD: byte p012
	+++  NEW FIELD: byte p133
	+++  NEW FIELD: byte p254
	+++  NEW FIELD: byte p011
	+++  NEW FIELD: byte p132
	+++  NEW FIELD: byte p253
	+++  NEW FIELD: byte p018
	+++  NEW FIELD: byte p139
	+++  NEW FIELD: byte p017
	+++  NEW FIELD: byte p138
	+++  NEW FIELD: byte p016
	+++  NEW FIELD: byte p137
	+++  NEW FIELD: byte p015
	+++  NEW FIELD: byte p136
	+++  NEW FIELD: byte p019
	+++  NEW FIELD: byte p010
	+++  NEW FIELD: byte p131
	+++  NEW FIELD: byte p252
	+++  NEW FIELD: byte p130
	+++  NEW FIELD: byte p251
	+++  NEW FIELD: byte p250
	+++  NEW FIELD: byte p003
	+++  NEW FIELD: byte p124
	+++  NEW FIELD: byte p245
	+++  NEW FIELD: byte p002
	+++  NEW FIELD: byte p123
	+++  NEW FIELD: byte p244
	+++  NEW FIELD: byte p001
	+++  NEW FIELD: byte p122
	+++  NEW FIELD: byte p243
	+++  NEW FIELD: byte p000
	+++  NEW FIELD: byte p121
	+++  NEW FIELD: byte p242
	+++  NEW FIELD: byte p007
	+++  NEW FIELD: byte p128
	+++  NEW FIELD: byte p249
	+++  NEW FIELD: byte p006
	+++  NEW FIELD: byte p127
	+++  NEW FIELD: byte p248
	+++  NEW FIELD: byte p005
	+++  NEW FIELD: byte p126
	+++  NEW FIELD: byte p247
	+++  NEW FIELD: byte p004
	+++  NEW FIELD: byte p125
	+++  NEW FIELD: byte p246
	+++  NEW FIELD: byte p009
	+++  NEW FIELD: byte p008
	+++  NEW FIELD: byte p129
	+++  NEW CONSTRUCTOR: PUBLIC(+) BenchmarkTextMatchQueriesSSQE_query5MultiColOr_jmhTest()
	+++  NEW METHOD: org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType _jmh_tryInit_f_benchmarktextmatchqueriesssqe0_G(org.openjdk.jmh.runner.InfraControl)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query5MultiColOr_AverageTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query5MultiColOr_avgt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query5MultiColOr_sample_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.openjdk.jmh.util.SampleBuffer, int, long, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query5MultiColOr_SampleTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query5MultiColOr_SingleShotTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query5MultiColOr_ss_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.openjdk.jmh.results.BenchmarkTaskResult query5MultiColOr_Throughput(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void query5MultiColOr_thrpt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		+++  NEW EXCEPTION: java.lang.Throwable
---! REMOVED CLASS: PUBLIC(-) FINAL(-) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_query_jmhTest  (not serializable)
	---  CLASS FILE FORMAT VERSION: n.a. <- 55.0
	---! REMOVED SUPERCLASS: java.lang.Object
	---! REMOVED FIELD: byte p160
	---! REMOVED FIELD: byte p043
	---! REMOVED FIELD: byte p164
	---! REMOVED FIELD: byte p042
	---! REMOVED FIELD: byte p163
	---! REMOVED FIELD: byte p041
	---! REMOVED FIELD: byte p162
	---! REMOVED FIELD: byte p040
	---! REMOVED FIELD: byte p161
	---! REMOVED FIELD: byte p036
	---! REMOVED FIELD: byte p157
	---! REMOVED FIELD: byte p035
	---! REMOVED FIELD: byte p156
	---! REMOVED FIELD: byte p034
	---! REMOVED FIELD: byte p155
	---! REMOVED FIELD: byte p033
	---! REMOVED FIELD: byte p154
	---! REMOVED FIELD: byte p039
	---! REMOVED FIELD: byte p038
	---! REMOVED FIELD: byte p159
	---! REMOVED FIELD: byte p037
	---! REMOVED FIELD: byte p158
	---! REMOVED FIELD: byte p032
	---! REMOVED FIELD: byte p153
	---! REMOVED FIELD: byte p031
	---! REMOVED FIELD: byte p152
	---! REMOVED FIELD: byte p030
	---! REMOVED FIELD: byte p151
	---! REMOVED FIELD: byte p150
	---! REMOVED FIELD: int startRndMask
	---! REMOVED FIELD: byte p025
	---! REMOVED FIELD: byte p146
	---! REMOVED FIELD: byte p024
	---! REMOVED FIELD: byte p145
	---! REMOVED FIELD: byte p023
	---! REMOVED FIELD: byte p144
	---! REMOVED FIELD: byte p022
	---! REMOVED FIELD: byte p143
	---! REMOVED FIELD: byte p029
	---! REMOVED FIELD: byte p028
	---! REMOVED FIELD: byte p149
	---! REMOVED FIELD: byte p027
	---! REMOVED FIELD: byte p148
	---! REMOVED FIELD: byte p026
	---! REMOVED FIELD: byte p147
	---! REMOVED FIELD: byte p061
	---! REMOVED FIELD: byte p182
	---! REMOVED FIELD: byte p060
	---! REMOVED FIELD: byte p181
	---! REMOVED FIELD: byte p180
	---! REMOVED FIELD: byte p065
	---! REMOVED FIELD: byte p186
	---! REMOVED FIELD: byte p064
	---! REMOVED FIELD: byte p185
	---! REMOVED FIELD: org.openjdk.jmh.infra.Blackhole blackhole
	---! REMOVED FIELD: byte p063
	---! REMOVED FIELD: byte p184
	---! REMOVED FIELD: byte p062
	---! REMOVED FIELD: byte p183
	---! REMOVED FIELD: byte p058
	---! REMOVED FIELD: byte p179
	---! REMOVED FIELD: byte p057
	---! REMOVED FIELD: byte p178
	---! REMOVED FIELD: byte p056
	---! REMOVED FIELD: byte p177
	---! REMOVED FIELD: byte p055
	---! REMOVED FIELD: byte p176
	---! REMOVED FIELD: byte p059
	---! REMOVED FIELD: byte p050
	---! REMOVED FIELD: byte p171
	---! REMOVED FIELD: byte p170
	---! REMOVED FIELD: byte p054
	---! REMOVED FIELD: byte p175
	---! REMOVED FIELD: byte p053
	---! REMOVED FIELD: byte p174
	---! REMOVED FIELD: byte p052
	---! REMOVED FIELD: byte p173
	---! REMOVED FIELD: byte p051
	---! REMOVED FIELD: byte p172
	---! REMOVED FIELD: byte p047
	---! REMOVED FIELD: byte p168
	---! REMOVED FIELD: byte p046
	---! REMOVED FIELD: byte p167
	---! REMOVED FIELD: byte p045
	---! REMOVED FIELD: byte p166
	---! REMOVED FIELD: byte p044
	---! REMOVED FIELD: byte p165
	---! REMOVED FIELD: byte p049
	---! REMOVED FIELD: byte p048
	---! REMOVED FIELD: byte p169
	---! REMOVED FIELD: byte p083
	---! REMOVED FIELD: byte p082
	---! REMOVED FIELD: byte p081
	---! REMOVED FIELD: byte p080
	---! REMOVED FIELD: byte p087
	---! REMOVED FIELD: byte p086
	---! REMOVED FIELD: byte p085
	---! REMOVED FIELD: byte p084
	---! REMOVED FIELD: byte p079
	---! REMOVED FIELD: byte p078
	---! REMOVED FIELD: byte p199
	---! REMOVED FIELD: byte p077
	---! REMOVED FIELD: byte p198
	---! REMOVED FIELD: byte p072
	---! REMOVED FIELD: byte p193
	---! REMOVED FIELD: byte p071
	---! REMOVED FIELD: byte p192
	---! REMOVED FIELD: byte p070
	---! REMOVED FIELD: byte p191
	---! REMOVED FIELD: byte p190
	---! REMOVED FIELD: byte p076
	---! REMOVED FIELD: byte p197
	---! REMOVED FIELD: byte p075
	---! REMOVED FIELD: byte p196
	---! REMOVED FIELD: byte p074
	---! REMOVED FIELD: byte p195
	---! REMOVED FIELD: byte p073
	---! REMOVED FIELD: byte p194
	---! REMOVED FIELD: byte p069
	---! REMOVED FIELD: byte p068
	---! REMOVED FIELD: byte p189
	---! REMOVED FIELD: byte p067
	---! REMOVED FIELD: byte p188
	---! REMOVED FIELD: byte p066
	---! REMOVED FIELD: byte p187
	---! REMOVED FIELD: byte p099
	---! REMOVED FIELD: byte p090
	---! REMOVED FIELD: byte p094
	---! REMOVED FIELD: byte p093
	---! REMOVED FIELD: byte p092
	---! REMOVED FIELD: byte p091
	---! REMOVED FIELD: byte p098
	---! REMOVED FIELD: byte p097
	---! REMOVED FIELD: byte p096
	---! REMOVED FIELD: byte p095
	---! REMOVED FIELD: byte p089
	---! REMOVED FIELD: byte p088
	---! REMOVED FIELD: STATIC(-) VOLATILE(-) org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType f_benchmarktextmatchqueriesssqe0_G
	---! REMOVED FIELD: org.openjdk.jmh.infra.IterationParams iterationParams
	---! REMOVED FIELD: byte p212
	---! REMOVED FIELD: byte p211
	---! REMOVED FIELD: byte p210
	---! REMOVED FIELD: byte p216
	---! REMOVED FIELD: byte p215
	---! REMOVED FIELD: byte p214
	---! REMOVED FIELD: byte p213
	---! REMOVED FIELD: byte p219
	---! REMOVED FIELD: byte p218
	---! REMOVED FIELD: byte p217
	---! REMOVED FIELD: org.openjdk.jmh.infra.ThreadParams threadParams
	---! REMOVED FIELD: org.openjdk.jmh.infra.Control notifyControl
	---! REMOVED FIELD: byte p201
	---! REMOVED FIELD: byte p200
	---! REMOVED FIELD: byte p205
	---! REMOVED FIELD: byte p204
	---! REMOVED FIELD: byte p203
	---! REMOVED FIELD: byte p202
	---! REMOVED FIELD: byte p209
	---! REMOVED FIELD: byte p208
	---! REMOVED FIELD: byte p207
	---! REMOVED FIELD: byte p206
	---! REMOVED FIELD: byte p120
	---! REMOVED FIELD: byte p241
	---! REMOVED FIELD: byte p240
	---! REMOVED FIELD: byte p113
	---! REMOVED FIELD: byte p234
	---! REMOVED FIELD: byte p112
	---! REMOVED FIELD: byte p233
	---! REMOVED FIELD: byte p111
	---! REMOVED FIELD: byte p232
	---! REMOVED FIELD: byte p110
	---! REMOVED FIELD: byte p231
	---! REMOVED FIELD: byte p117
	---! REMOVED FIELD: byte p238
	---! REMOVED FIELD: byte p116
	---! REMOVED FIELD: byte p237
	---! REMOVED FIELD: byte p115
	---! REMOVED FIELD: byte p236
	---! REMOVED FIELD: byte p114
	---! REMOVED FIELD: byte p235
	---! REMOVED FIELD: byte p119
	---! REMOVED FIELD: byte p118
	---! REMOVED FIELD: byte p239
	---! REMOVED FIELD: byte p230
	---! REMOVED FIELD: byte p102
	---! REMOVED FIELD: byte p223
	---! REMOVED FIELD: byte p101
	---! REMOVED FIELD: byte p222
	---! REMOVED FIELD: byte p100
	---! REMOVED FIELD: byte p221
	---! REMOVED FIELD: byte p220
	---! REMOVED FIELD: byte p106
	---! REMOVED FIELD: byte p227
	---! REMOVED FIELD: byte p105
	---! REMOVED FIELD: byte p226
	---! REMOVED FIELD: byte p104
	---! REMOVED FIELD: byte p225
	---! REMOVED FIELD: byte p103
	---! REMOVED FIELD: byte p224
	---! REMOVED FIELD: byte p109
	---! REMOVED FIELD: byte p108
	---! REMOVED FIELD: byte p229
	---! REMOVED FIELD: byte p107
	---! REMOVED FIELD: byte p228
	---! REMOVED FIELD: org.openjdk.jmh.infra.BenchmarkParams benchmarkParams
	---! REMOVED FIELD: byte p021
	---! REMOVED FIELD: byte p142
	---! REMOVED FIELD: byte p020
	---! REMOVED FIELD: byte p141
	---! REMOVED FIELD: byte p140
	---! REMOVED FIELD: byte p014
	---! REMOVED FIELD: byte p135
	---! REMOVED FIELD: byte p013
	---! REMOVED FIELD: byte p134
	---! REMOVED FIELD: byte p255
	---! REMOVED FIELD: byte p012
	---! REMOVED FIELD: byte p133
	---! REMOVED FIELD: byte p254
	---! REMOVED FIELD: byte p011
	---! REMOVED FIELD: byte p132
	---! REMOVED FIELD: byte p253
	---! REMOVED FIELD: byte p018
	---! REMOVED FIELD: byte p139
	---! REMOVED FIELD: byte p017
	---! REMOVED FIELD: byte p138
	---! REMOVED FIELD: byte p016
	---! REMOVED FIELD: byte p137
	---! REMOVED FIELD: byte p015
	---! REMOVED FIELD: byte p136
	---! REMOVED FIELD: byte p019
	---! REMOVED FIELD: byte p010
	---! REMOVED FIELD: byte p131
	---! REMOVED FIELD: byte p252
	---! REMOVED FIELD: byte p130
	---! REMOVED FIELD: byte p251
	---! REMOVED FIELD: byte p250
	---! REMOVED FIELD: byte p003
	---! REMOVED FIELD: byte p124
	---! REMOVED FIELD: byte p245
	---! REMOVED FIELD: byte p002
	---! REMOVED FIELD: byte p123
	---! REMOVED FIELD: byte p244
	---! REMOVED FIELD: byte p001
	---! REMOVED FIELD: byte p122
	---! REMOVED FIELD: byte p243
	---! REMOVED FIELD: byte p000
	---! REMOVED FIELD: byte p121
	---! REMOVED FIELD: byte p242
	---! REMOVED FIELD: byte p007
	---! REMOVED FIELD: byte p128
	---! REMOVED FIELD: byte p249
	---! REMOVED FIELD: byte p006
	---! REMOVED FIELD: byte p127
	---! REMOVED FIELD: byte p248
	---! REMOVED FIELD: byte p005
	---! REMOVED FIELD: byte p126
	---! REMOVED FIELD: byte p247
	---! REMOVED FIELD: byte p004
	---! REMOVED FIELD: byte p125
	---! REMOVED FIELD: byte p246
	---! REMOVED FIELD: byte p009
	---! REMOVED FIELD: byte p008
	---! REMOVED FIELD: byte p129
	---! REMOVED CONSTRUCTOR: PUBLIC(-) BenchmarkTextMatchQueriesSSQE_query_jmhTest()
	---! REMOVED METHOD: org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType _jmh_tryInit_f_benchmarktextmatchqueriesssqe0_G(org.openjdk.jmh.runner.InfraControl)
		---  REMOVED EXCEPTION: java.lang.Throwable
	---! REMOVED METHOD: PUBLIC(-) org.openjdk.jmh.results.BenchmarkTaskResult query_AverageTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		---  REMOVED EXCEPTION: java.lang.Throwable
	---! REMOVED METHOD: PUBLIC(-) STATIC(-) void query_avgt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		---  REMOVED EXCEPTION: java.lang.Throwable
	---! REMOVED METHOD: PUBLIC(-) STATIC(-) void query_sample_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.openjdk.jmh.util.SampleBuffer, int, long, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		---  REMOVED EXCEPTION: java.lang.Throwable
	---! REMOVED METHOD: PUBLIC(-) org.openjdk.jmh.results.BenchmarkTaskResult query_SampleTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		---  REMOVED EXCEPTION: java.lang.Throwable
	---! REMOVED METHOD: PUBLIC(-) org.openjdk.jmh.results.BenchmarkTaskResult query_SingleShotTime(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		---  REMOVED EXCEPTION: java.lang.Throwable
	---! REMOVED METHOD: PUBLIC(-) STATIC(-) void query_ss_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		---  REMOVED EXCEPTION: java.lang.Throwable
	---! REMOVED METHOD: PUBLIC(-) org.openjdk.jmh.results.BenchmarkTaskResult query_Throughput(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.infra.ThreadParams)
		---  REMOVED EXCEPTION: java.lang.Throwable
	---! REMOVED METHOD: PUBLIC(-) STATIC(-) void query_thrpt_jmhStub(org.openjdk.jmh.runner.InfraControl, org.openjdk.jmh.results.RawResults, org.openjdk.jmh.infra.BenchmarkParams, org.openjdk.jmh.infra.IterationParams, org.openjdk.jmh.infra.ThreadParams, org.openjdk.jmh.infra.Blackhole, org.openjdk.jmh.infra.Control, int, org.apache.pinot.perf.jmh_generated.BenchmarkTextMatchQueriesSSQE_jmhType)
		---  REMOVED EXCEPTION: java.lang.Throwable

Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-protobuf-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-protobuf-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-pulsar-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-pulsar-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-query-planner-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-query-planner-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-query-runtime-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-query-runtime-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-s3-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-s3-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-segment-local-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-segment-local-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
***  MODIFIED CLASS: PUBLIC org.apache.pinot.segment.local.indexsegment.mutable.MutableSegmentImpl  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	***  MODIFIED FIELD: PRIVATE FINAL (<- NON_FINAL) org.apache.pinot.segment.spi.index.multicolumntext.MultiColumnTextMetadata _multiColumnTextMetadata
***  MODIFIED CLASS: PUBLIC FINAL org.apache.pinot.segment.local.segment.index.column.PhysicalColumnIndexContainer  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++  NEW FIELD: PRIVATE(+) org.apache.pinot.segment.local.segment.index.readers.text.MultiColumnLuceneTextIndexReader _multiColTextReader
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.segment.local.segment.index.readers.text.MultiColumnLuceneTextIndexReader getMultiColumnTextIndex()
	+++  NEW METHOD: PUBLIC(+) void setMultiColumnTextIndex(org.apache.pinot.segment.local.segment.index.readers.text.MultiColumnLuceneTextIndexReader)
***  MODIFIED CLASS: PUBLIC ABSTRACT org.apache.pinot.segment.local.segment.index.datasource.BaseDataSource  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.segment.spi.index.reader.MultiColumnTextIndexReader getMultiColumnTextIndex()
***! MODIFIED CLASS: PUBLIC org.apache.pinot.segment.local.segment.index.datasource.MutableDataSource  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	---! REMOVED CONSTRUCTOR: PUBLIC(-) MutableDataSource(org.apache.pinot.spi.data.FieldSpec, int, int, int, int, org.apache.pinot.segment.spi.partition.PartitionFunction, java.util.Set<java.lang.Integer>, java.lang.Comparable, java.lang.Comparable, java.util.Map<org.apache.pinot.segment.spi.index.IndexType,org.apache.pinot.segment.spi.index.mutable.MutableIndex>, org.apache.pinot.segment.spi.index.mutable.MutableDictionary, org.apache.pinot.segment.local.realtime.impl.nullvalue.MutableNullValueVector, int)
	+++  NEW CONSTRUCTOR: PUBLIC(+) MutableDataSource(org.apache.pinot.spi.data.FieldSpec, int, int, int, int, org.apache.pinot.segment.spi.partition.PartitionFunction, java.util.Set<java.lang.Integer>, java.lang.Comparable, java.lang.Comparable, java.util.Map<org.apache.pinot.segment.spi.index.IndexType,org.apache.pinot.segment.spi.index.mutable.MutableIndex>, org.apache.pinot.segment.spi.index.mutable.MutableDictionary, org.apache.pinot.segment.local.realtime.impl.nullvalue.MutableNullValueVector, int, org.apache.pinot.segment.spi.index.reader.MultiColumnTextIndexReader)
***  MODIFIED CLASS: PUBLIC org.apache.pinot.segment.local.segment.index.loader.invertedindex.MultiColumnTextIndexHandler  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	***  MODIFIED METHOD: PRIVATE NON_STATIC (<- STATIC) void validate(org.apache.pinot.spi.data.FieldSpec$DataType, java.lang.String)
***  MODIFIED CLASS: PUBLIC FINAL org.apache.pinot.segment.local.utils.TableConfigUtils  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++  NEW METHOD: PUBLIC(+) STATIC(+) void checkForDuplicates(java.util.List<java.lang.String>)
	+++  NEW METHOD: PRIVATE(+) STATIC(+) void validateMultiColumnTextIndex(org.apache.pinot.spi.config.table.MultiColumnTextIndexConfig)

Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-segment-spi-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-segment-spi-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
***  MODIFIED INTERFACE: PUBLIC ABSTRACT org.apache.pinot.segment.spi.datasource.DataSource  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.segment.spi.index.reader.MultiColumnTextIndexReader getMultiColumnTextIndex()
***  MODIFIED CLASS: PUBLIC STATIC org.apache.pinot.segment.spi.index.column.ColumnIndexContainer$FromMap  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++  NEW FIELD: PRIVATE(+) FINAL(+) org.apache.pinot.segment.spi.index.reader.MultiColumnTextIndexReader _multiColTextReader
	+++  NEW CONSTRUCTOR: PUBLIC(+) ColumnIndexContainer$FromMap(java.util.Map<org.apache.pinot.segment.spi.index.IndexType,? extends org.apache.pinot.segment.spi.index.IndexReader>, org.apache.pinot.segment.spi.index.reader.MultiColumnTextIndexReader)
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.segment.spi.index.reader.MultiColumnTextIndexReader getMultiColumnTextIndex()
***  MODIFIED CLASS: PUBLIC STATIC org.apache.pinot.segment.spi.index.column.ColumnIndexContainer$FromMap$Builder  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++  NEW FIELD: PRIVATE(+) org.apache.pinot.segment.spi.index.reader.MultiColumnTextIndexReader _multiColTextReader
	+++  NEW METHOD: PUBLIC(+) org.apache.pinot.segment.spi.index.column.ColumnIndexContainer$FromMap$Builder with(org.apache.pinot.segment.spi.index.reader.MultiColumnTextIndexReader)
		GENERIC TEMPLATES: +++ R:org.apache.pinot.segment.spi.index.IndexReader
***  MODIFIED CLASS: PUBLIC org.apache.pinot.segment.spi.index.multicolumntext.MultiColumnTextMetadata  (not serializable)
	===  CLASS FILE FORMAT VERSION: 55.0 <- 55.0
	+++  NEW METHOD: PUBLIC(+) STATIC(+) boolean isValidPerColumnProperty(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) boolean isValidSharedProperty(java.lang.String)

Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-segment-uploader-default-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-segment-uploader-default-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-segment-writer-file-based-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-segment-writer-file-based-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-server-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-server-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-spark-2-connector-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-spark-2-connector-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-spark-3-connector-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-spark-3-connector-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-spark-common-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-spark-common-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-spi-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-spi-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-thrift-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-thrift-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-timeseries-m3ql-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-timeseries-m3ql-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-timeseries-planner-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-timeseries-planner-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-timeseries-spi-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-timeseries-spi-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-tools-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-tools-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
Comparing source compatibility of /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_new/pinot-yammer-1.4.0-SNAPSHOT.jar against /home/runner/work/pinot-pr-reports/pinot-pr-reports/commit_jars_old/pinot-yammer-1.4.0-SNAPSHOT.jar
WARNING: You are using the option '--ignore-missing-classes', i.e. superclasses and interfaces that could not be found on the classpath are ignored. Hence changes caused by these superclasses and interfaces are not reflected in the output.
No changes.
