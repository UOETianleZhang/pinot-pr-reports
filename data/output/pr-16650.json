{
  "files": [
    "pinot-core/src/test/java/org/apache/pinot/queries/TextSearchQueriesTest.java",
    "pinot-segment-local/src/main/java/org/apache/pinot/segment/local/segment/index/text/lucene/parsers/MatchQueryParser.java",
    "pinot-segment-local/src/main/java/org/apache/pinot/segment/local/utils/LuceneTextIndexUtils.java",
    "pinot-segment-local/src/test/java/org/apache/pinot/segment/local/segment/index/text/lucene/parsers/MinimumShouldMatchQueryParserTest.java"
  ],
  "mergedAt": "2025-09-03T13:33:02Z",
  "number": 16650,
  "title": "Add support for minimum should match in lucene text search",
  "url": "https://github.com/apache/pinot/pull/16650",
  "jcmpClasses": [
    {
      "className": "org.apache.pinot.segment.local.segment.index.text.lucene.parsers.MatchQueryParser",
      "type": "addition",
      "compatible": true,
      "removedMethods": [],
      "addedMethods": [
        "PRIVATE(+) org.apache.lucene.search.Query applyMinimumShouldMatch(org.apache.lucene.search.BooleanQuery)",
        "PRIVATE(+) org.apache.lucene.search.Query applyMinimumShouldMatch(org.apache.lucene.search.BooleanQuery, java.util.Set<org.apache.lucene.search.BooleanQuery>)",
        "PRIVATE(+) int calculateMinimumShouldMatch(int, java.lang.String)",
        "PUBLIC(+) org.apache.lucene.search.Query parse(java.lang.String)",
        "PUBLIC(+) void ReInit(org.apache.lucene.queryparser.charstream.CharStream)",
        "PUBLIC(+) void setDefaultOperator(org.apache.lucene.search.BooleanClause$Occur)",
        "PUBLIC(+) void setMinimumShouldMatch(java.lang.String)",
        "PUBLIC(+) org.apache.lucene.search.Query TopLevelQuery(java.lang.String)",
        "PRIVATE(+) java.lang.String validateMinimumShouldMatch(java.lang.String)"
      ],
      "removedFields": [],
      "addedFields": [
        "PRIVATE(+) FINAL(+) java.lang.String _field",
        "PRIVATE(+) FINAL(+) org.apache.lucene.analysis.Analyzer _analyzer",
        "PRIVATE(+) STATIC(+) FINAL(+) java.util.regex.Pattern PERCENTAGE_PATTERN",
        "PRIVATE(+) org.apache.lucene.search.BooleanClause$Occur _defaultOperator",
        "PRIVATE(+) java.lang.String _minimumShouldMatch"
      ],
      "removedConstructors": [],
      "addedConstructors": [
        "PUBLIC(+) MatchQueryParser(java.lang.String, org.apache.lucene.analysis.Analyzer)"
      ]
    },
    {
      "className": "org.apache.pinot.segment.local.utils.LuceneTextIndexUtils",
      "type": "modification",
      "compatible": true,
      "removedMethods": [],
      "addedMethods": [],
      "removedFields": [],
      "addedFields": [
        "PUBLIC(+) STATIC(+) FINAL(+) java.lang.String MATCH_QUERY_PARSER_CLASS",
        "PUBLIC(+) STATIC(+) FINAL(+) java.lang.String PARSER_MATCH"
      ],
      "removedConstructors": [],
      "addedConstructors": []
    },
    {
      "className": "org.apache.pinot.segment.local.utils.LuceneTextIndexUtils$LuceneTextIndexOptions",
      "type": "modification",
      "compatible": true,
      "removedMethods": [],
      "addedMethods": [
        "PUBLIC(+) java.lang.String getMinimumShouldMatch()"
      ],
      "removedFields": [],
      "addedFields": [],
      "removedConstructors": [],
      "addedConstructors": []
    },
    {
      "className": "org.apache.pinot.segment.local.utils.LuceneTextIndexUtils$OptionKey",
      "type": "modification",
      "compatible": true,
      "removedMethods": [],
      "addedMethods": [],
      "removedFields": [],
      "addedFields": [
        "PUBLIC(+) STATIC(+) FINAL(+) java.lang.String MINIMUM_SHOULD_MATCH"
      ],
      "removedConstructors": [],
      "addedConstructors": []
    }
  ]
}