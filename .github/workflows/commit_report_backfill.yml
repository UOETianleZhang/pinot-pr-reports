# .github/workflows/parallel_backfill.yml
name: Parallel Commit Backfill

on:
  workflow_dispatch:
    inputs:
      start_offset_days:
        description: "How many days ago to start (e.g. 30 → window starts 30 days ago)"
        required: true
        default: 30
      backfill_days:
        description: "How many days from that start to backfill"
        required: true
        default: 30

jobs:
  backfill:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      fail-fast: false
      matrix:
        chunk: [0,1,2,3,4,5]   # 6 parallel slices

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java & Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven openjdk-17-jdk

      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Compute absolute window & this chunk’s window
        id: dates
        run: |
          # inputs
          START_OFFSET=${{ github.event.inputs.start_offset_days }}
          BACKFILL_DAYS=${{ github.event.inputs.backfill_days }}
          SLICES=6
          CHUNK_SIZE=$(( (BACKFILL_DAYS + SLICES - 1) / SLICES ))

          NOW=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          WINDOW_START=$(date -u -d "$NOW - $START_OFFSET days" +"%Y-%m-%dT%H:%M:%SZ")
          WINDOW_END=$(date -u -d "$WINDOW_START + $BACKFILL_DAYS days" +"%Y-%m-%dT%H:%M:%SZ")

          # this slice:
          CHUNK_START=$(date -u -d "$WINDOW_START + $(( matrix.chunk * CHUNK_SIZE )) days" +"%Y-%m-%dT%H:%M:%SZ")
          CHUNK_END=$(date -u -d "$CHUNK_START + $CHUNK_SIZE days" +"%Y-%m-%dT%H:%M:%SZ")

          # but cap CHUNK_END at WINDOW_END
          if [[ "$(date -d "$CHUNK_END" +%s)" -gt "$(date -d "$WINDOW_END" +%s)" ]]; then
            CHUNK_END="$WINDOW_END"
          fi

          echo "Window: $WINDOW_START → $WINDOW_END"
          echo "Slice ${{ matrix.chunk }}: $CHUNK_START → $CHUNK_END"

          echo "start=$CHUNK_START" >> $GITHUB_OUTPUT
          echo "end=$CHUNK_END"   >> $GITHUB_OUTPUT

      - name: Run backfill for chunk ${{ matrix.chunk }}
        continue-on-error: true
        run: |
          CHUNK_DIR="data/chunk-${{ matrix.chunk }}"
          mkdir -p "$CHUNK_DIR"
          scripts/.pinot_backfill_commit_compare.sh \
            --start "${{ steps.dates.outputs.start }}" \
            --end   "${{ steps.dates.outputs.end }}" \
            --outdir "$CHUNK_DIR"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v4
        with:
          name: chunk-${{ matrix.chunk }}
          path: data/chunk-${{ matrix.chunk }}

  merge:
    needs: backfill
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: artifacts/
          if-no-files-found: ignore

      - name: Combine all reports
        run: |
          mkdir -p data/japicmp data/output
          if [[ -d artifacts ]]; then
            find artifacts/ -type f -path "*/japicmp/*.json" \
              -exec cp {} data/japicmp/ \;
            find artifacts/ -type f -path "*/output/*.json" \
              -exec cp {} data/output/ \;
          else
            echo "ℹ️  No artifacts to merge."
          fi

      - name: Commit & push combined reports
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add data/japicmp data/output
            git commit -m "chore: backfill ${GITHUB_EVENT_INPUTS_BACKFILL_DAYS}d from ${GITHUB_EVENT_INPUTS_START_OFFSET_DAYS}d ago"
            git push
          else
            echo "ℹ️  No new reports to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Pages deploy
        run: gh workflow run deploy-pages.yml --ref main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}